name: Continuous Integration

on: [ push, pull_request ]

jobs:
  tests:
    name: Run tests
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD:
          MYSQL_DATABASE: event_store_tests
        options: >-
          --health-cmd "mysqladmin ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 3
        ports:
          - 3306:3306
      postgres:
        image: postgres:12
        env:
          - POSTGRES_DB=event_store_tests
          - POSTGRES_HOST_AUTH_METHOD=trust
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Install PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: "8.2"
          coverage: xdebug
          extensions: intl, gd
          tools: psalm:4.30, phpcs:3.7, phpunit:9.6, composer:v2
        env:
          COMPOSER_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Validate composer config
        run: composer validate

      - name: Get Composer Cache Directory
        id: composer-cache
        run: |
          echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

      - name: Cache Composer Dependencies
        uses: actions/cache@v2
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-

      - name: Install Composer dependencies
        if: steps.composer-cache.outputs.cache-hit != 'true'
        uses: php-actions/composer@v6
        with:
          php_version: "8.2.1"
          version: 2
          args: --ignore-platform-reqs --no-suggest --no-scripts
        env:
          ACTION_PHP_VERSION: 8.2.1

      - name: Run code styling with PHPCS
        run: phpcs

      - name: Run header checks with DocHeader
        run: ./vendor/bin/docheader check src/ test/

      - name: Run static code analysis with psalm
        run: psalm --config=psalm.xml

      - name: Run Postgres unit tests with PHPUnit
        run: DB_HOST=localhost phpunit -c phpunit.postgres.xml --coverage-clover build/logs/clover.xml
        env:
          XDEBUG_MODE: coverage

      - name: Run MySQL unit tests with PHPUnit
        run: DB_HOST=localhost phpunit -c phpunit.mysql.xml --coverage-clover build/logs/clover.xml
        env:
          XDEBUG_MODE: coverage
